/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.company.resume.panel;

import com.company.resume.config.Config;
import com.mycompany.dao.inter.EmploymentHistoryDaoInter;
import com.mycompany.entity.EmploymentHistory;
import com.mycompany.main.Context;
import java.text.SimpleDateFormat;
import java.sql.Date;
import java.text.ParseException;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class EmpHistoryPanel extends javax.swing.JPanel {

    private EmploymentHistoryDaoInter empHistoryDao = Context.instanceEmploymentHistoryDao();
    private SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
    List<EmploymentHistory> empHistoryList;

    /**
     * Creates new form EmpHistoryPanel
     */
    public EmpHistoryPanel() {
        initComponents();
    }

    public void fillUserComponents() {
        fillList();
    }

    private void fillList() {
        empHistoryList = empHistoryDao.getAllEmploymentHistoryByUserId(Config.loggedInUser.getId());
        DefaultListModel<EmploymentHistory> model = new DefaultListModel<>();
        for (EmploymentHistory history : empHistoryList) {
            model.addElement(history);
        }
        listEmpHistory.setModel(model);
    }

    private void fillHistory(EmploymentHistory empHistory) {
        txtHeader.setText(null);
        txtBeginDate.setText(null);
        txtEndDate.setText(null);
        txtAreaJobDesc.setText(null);

        txtHeader.setText(empHistory.getHeader());

        if (empHistory.getBeginDate() != null) {
            Date beginDate = empHistory.getBeginDate();
            txtBeginDate.setText(sdf.format(beginDate));
        } else {
            txtBeginDate.setText(null);
        }

        if (empHistory.getEndDate() != null) {
            Date endDate = empHistory.getEndDate();
            txtEndDate.setText(sdf.format(endDate));
        } else {
            txtEndDate.setText(null);
        }

        txtAreaJobDesc.setText(empHistory.getJobDescription());
    }

    private boolean isEmpHistoryExist(EmploymentHistory eh) {
        for (EmploymentHistory empHistory : empHistoryList) {
            if (empHistory.equals(eh)) {
                return true;
            }
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        listEmpHistory = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaJobDesc = new javax.swing.JTextArea();
        lblHeader = new javax.swing.JLabel();
        txtHeader = new javax.swing.JTextField();
        lblBeginDate = new javax.swing.JLabel();
        txtBeginDate = new javax.swing.JTextField();
        lblEndDate = new javax.swing.JLabel();
        txtEndDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnCreateNew = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        listEmpHistory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        listEmpHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listEmpHistoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listEmpHistory);

        txtAreaJobDesc.setColumns(20);
        txtAreaJobDesc.setRows(5);
        jScrollPane1.setViewportView(txtAreaJobDesc);

        lblHeader.setText("Header");

        lblBeginDate.setText("Begin date");

        lblEndDate.setText("End date");

        jLabel4.setText("Job description");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnCreateNew.setText("Create New");
        btnCreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateNew, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(btnCreateNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBeginDate)
                                    .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEndDate))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBeginDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtHeader))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBeginDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBeginDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (listEmpHistory.getSelectedIndex() != -1) {
            empHistoryDao.removeEmpHistory(listEmpHistory.getSelectedValue().getId());
            fillList();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewActionPerformed
        if (listEmpHistory.getModel().getSize() > empHistoryList.size()) {
            return;
        }

        EmploymentHistory newEmpHistory = new EmploymentHistory();
        newEmpHistory.setHeader("New History");
        newEmpHistory.setUser(Config.loggedInUser);

        DefaultListModel<EmploymentHistory> model = (DefaultListModel<EmploymentHistory>) listEmpHistory.getModel();
        model.addElement(newEmpHistory);
        listEmpHistory.setModel(model);

        listEmpHistory.setSelectedValue(newEmpHistory, true);
        fillHistory(newEmpHistory);
    }//GEN-LAST:event_btnCreateNewActionPerformed

    private void listEmpHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listEmpHistoryMouseClicked
        fillHistory(listEmpHistory.getSelectedValue());
        EmploymentHistory empHistory = listEmpHistory.getSelectedValue();
        if (!isEmpHistoryExist(empHistory)) {
            btnAdd.setEnabled(true);
            btnDelete.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnCreateNew.setEnabled(false);
        } else {
            btnAdd.setEnabled(false);
            btnDelete.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnCreateNew.setEnabled(true);
        }
    }//GEN-LAST:event_listEmpHistoryMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        EmploymentHistory eh = listEmpHistory.getSelectedValue();
        eh.setHeader(txtHeader.getText());
        eh.setJobDescription(txtAreaJobDesc.getText());

        if (txtBeginDate.getText() == null || txtBeginDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(btnCreateNew, "Begin date can not be null!",
                    "Warning!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String beginDateString = txtBeginDate.getText();
            long beginDateTime = sdf.parse(beginDateString).getTime();
            Date beginDate = new Date(beginDateTime);
            eh.setBeginDate(beginDate);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(btnCreateNew,
                    ex.getMessage() + "\nDate format must be like'YYYY-MM-dd'!",
                    "Attention!", JOptionPane.INFORMATION_MESSAGE);
            return;
//            ex.printStackTrace();
        }

        if (txtEndDate.getText() == null || txtEndDate.getText().trim().equals("")) {
            eh.setEndDate(null);
        } else {
            try {
                String endDateString = txtEndDate.getText();
                long endDateTime = sdf.parse(endDateString).getTime();
                Date endDate = new Date(endDateTime);
                eh.setEndDate(endDate);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(btnCreateNew,
                        ex.getMessage() + "\nDate format must be like'YYYY-MM-dd'!",
                        "Attention!", JOptionPane.INFORMATION_MESSAGE);
                return;
//            ex.printStackTrace();
            }
        }
        
        empHistoryDao.insertEmpHistory(eh);
        fillList();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        EmploymentHistory eh = listEmpHistory.getSelectedValue();
        
        eh.setHeader(txtHeader.getText());
        eh.setJobDescription(txtAreaJobDesc.getText());

        if (txtBeginDate.getText() == null || txtBeginDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(btnCreateNew, "Begin date can not be null!",
                    "Warning!", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String beginDateString = txtBeginDate.getText();
            long beginDateTime = sdf.parse(beginDateString).getTime();
            Date beginDate = new Date(beginDateTime);
            eh.setBeginDate(beginDate);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(btnCreateNew,
                    ex.getMessage() + "\nDate format must be like'YYYY-MM-dd'!",
                    "Attention!", JOptionPane.INFORMATION_MESSAGE);
            return;
//            ex.printStackTrace();
        }

        if (txtEndDate.getText() == null || txtEndDate.getText().trim().equals("")) {
            eh.setEndDate(null);
        } else {
            try {
                String endDateString = txtEndDate.getText();
                long endDateTime = sdf.parse(endDateString).getTime();
                Date endDate = new Date(endDateTime);
                eh.setEndDate(endDate);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(btnCreateNew,
                        ex.getMessage() + "\nDate format must be like'YYYY-MM-dd'!",
                        "Attention!", JOptionPane.INFORMATION_MESSAGE);
                return;
//            ex.printStackTrace();
            }
        }
        
        empHistoryDao.updateEmpHistory(eh);
        fillList();
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCreateNew;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBeginDate;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JList<EmploymentHistory> listEmpHistory;
    private javax.swing.JTextArea txtAreaJobDesc;
    private javax.swing.JTextField txtBeginDate;
    private javax.swing.JTextField txtEndDate;
    private javax.swing.JTextField txtHeader;
    // End of variables declaration//GEN-END:variables
}
